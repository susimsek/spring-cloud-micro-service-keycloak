{
	"info": {
		"_postman_id": "369b9943-8f7f-410d-9230-093a3b99e523",
		"name": "spring-boot-micro-service-keycloak",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "product",
			"item": [
				{
					"name": "create-product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6045bada-a4d5-4b3a-bda3-e323ea300f19",
								"exec": [
									"pm.test(\"response is created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var json = pm.response.json();",
									"var id = json[\"id\"];",
									"pm.environment.set(\"id\", id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"a\",\n\t\"description\": \"mont yeni sezon\",\n\t\"price\": 10.6,\n\t\"size\": \"L\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/api/v1/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"mont1\",\n\t\"description\": \"mont yeni sezon1\",\n\t\"price\": 12,\n\t\"size\": \"L\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/api/v1/products/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"v1",
								"products",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/api/v1/products/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"v1",
								"products",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/api/v1/products/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"v1",
								"products",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "login",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a55b004b-76bc-4e6e-ab51-8cf7e55c5267",
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var json = pm.response.json();",
									"var token = json[\"access_token\"];",
									"var refreshToken = json[\"refresh_token\"]",
									"pm.environment.set(\"access_token\", token);",
									"pm.environment.set(\"refresh_token\", refreshToken);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "sso-client",
									"type": "text"
								},
								{
									"key": "username",
									"value": "sarah",
									"type": "text"
								},
								{
									"key": "password",
									"value": "kerrigan",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "ce30da4e-08ce-4859-a2d7-53745c7b2818",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://keycloak:9080/auth/realms/springcloud/protocol/openid-connect/token",
							"protocol": "http",
							"host": [
								"keycloak"
							],
							"port": "9080",
							"path": [
								"auth",
								"realms",
								"springcloud",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "Request Keycloak and get auth token"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}